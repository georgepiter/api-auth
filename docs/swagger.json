{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/create-user": {
            "post": {
                "description": "Cria um novo usuário com base nos dados fornecidos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Cria um novo usuário",
                "operationId": "create-user",
                "parameters": [
                    {
                        "description": "Credenciais de login do usuário",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Usuário criado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Erro de requisição inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Recurso não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/delete-user/{id}": {
            "delete": {
                "description": "Deleta um usuário pelo ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Deleta um usuário",
                "operationId": "delete-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do usuário a ser deletado",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Usuário deletado com sucesso",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Usuário não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "description": "Recebe as credenciais do usuário (user name e senha) e retorna um token JWT se as credenciais forem válidas.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Faz o login do usuário e retorna um token JWT",
                "operationId": "login",
                "parameters": [
                    {
                        "description": "Credenciais de login do usuário",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token JWT gerado",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Erro de requisição inválida",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Credenciais inválidas",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/update-user/{id}": {
            "put": {
                "description": "Atualiza um usuário pelo ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Atualiza um usuário",
                "operationId": "update-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do usuário a ser atualizado",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados do usuário a serem atualizados",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuário atualizado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Erro de requisição inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Usuário não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Entidade não processável",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/validate-token": {
            "post": {
                "description": "Esse endpoint é responsável por validar o token que foi passado nas requisições das API´s",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Valida o token de usuário",
                "operationId": "validate-token",
                "parameters": [
                    {
                        "description": "Token a ser validado",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TokenValidRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token validado com sucesso",
                        "schema": {
                            "$ref": "#/definitions/models.TokenValidResponse"
                        }
                    },
                    "400": {
                        "description": "Erro de requisição inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "token inválido",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AuthResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.Login": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "piter.teste@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "123"
                },
                "userName": {
                    "type": "string",
                    "example": "piter"
                }
            }
        },
        "models.TokenValidRequest": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "models.TokenValidResponse": {
            "type": "object",
            "properties": {
                "isValid": {
                    "type": "boolean"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "piter.teste@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "123"
                },
                "userName": {
                    "type": "string",
                    "example": "piter"
                }
            }
        }
    }
}